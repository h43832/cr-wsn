package wsn;

import java.awt.*;
import java.io.*;
import javax.swing.*;
import javax.swing.text.*;
import java.util.*;
public class WSNApplicationDemo4B extends javax.swing.JFrame {
 WSN wsn;
 WSNApplicationDemo4 a4;
 DefaultStyledDocument styleDoc=new DefaultStyledDocument();
 TreeMap itemRecord=new TreeMap();
 boolean begin=true;
 public DefaultListModel listModel1=new DefaultListModel();
  /** Creates new form WSNApplicationDemo4B */
  public WSNApplicationDemo4B(WSNApplicationDemo4 a4,WSN wsn) {
    initComponents();
    this.a4=a4;
    this.wsn=wsn;
        int width=Toolkit.getDefaultToolkit().getScreenSize().width;
        int h=Toolkit.getDefaultToolkit().getScreenSize().height-20;

        int w2=(width * 80000)/100000;
        int h2=(h * 80000)/100000;

        setSize(w2,h2);

        setLocation((width-w2)/2,(h-h2)/2);

        Image iconImage=new ImageIcon(getClass().getClassLoader().getResource("crtc_logo_t.gif")).getImage();
        setIconImage(iconImage);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")

  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jPanel3 = new javax.swing.JPanel();
    jLabel4 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jPanel4 = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    jTextField1 = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jPanel5 = new javax.swing.JPanel();
    jButton3 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jPanel2 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTextPane1 = new javax.swing.JTextPane(styleDoc);
    jScrollPane2 = new javax.swing.JScrollPane();
    jList1 = new javax.swing.JList();

    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("wsn/Bundle"); 
    setTitle(bundle.getString("WSNApplicationDemo4B.title")); 
    setName("Form"); 

    jPanel1.setName("jPanel1"); 
    jPanel1.setLayout(new java.awt.GridLayout(3, 1));

    jPanel3.setName("jPanel3"); 
    jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

    jLabel4.setName("jLabel4"); 
    jPanel3.add(jLabel4);

    jLabel3.setFont(jLabel3.getFont());

    jLabel3.setText(bundle.getString("WSNApplicationDemo4B.jLabel3.text")); 
    jLabel3.setName("jLabel3"); 
    jPanel3.add(jLabel3);

    jPanel1.add(jPanel3);

    jPanel4.setName("jPanel4"); 
    jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

    jLabel2.setFont(jLabel2.getFont());
    jLabel2.setText(bundle.getString("WSNApplicationDemo4B.jLabel2.text")); 
    jLabel2.setName("jLabel2"); 
    jPanel4.add(jLabel2);

    jTextField1.setFont(jTextField1.getFont());
    jTextField1.setText(bundle.getString("WSNApplicationDemo4B.jTextField1.text")); 
    jTextField1.setName("jTextField1"); 
    jTextField1.setPreferredSize(new java.awt.Dimension(200, 21));
    jPanel4.add(jTextField1);

    jButton1.setFont(jButton1.getFont());
    jButton1.setText(bundle.getString("WSNApplicationDemo4B.jButton1.text")); 
    jButton1.setName("jButton1"); 
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    jPanel4.add(jButton1);

    jButton2.setFont(jButton2.getFont());
    jButton2.setText(bundle.getString("WSNApplicationDemo4B.jButton2.text")); 
    jButton2.setName("jButton2"); 
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });
    jPanel4.add(jButton2);

    jPanel1.add(jPanel4);

    jPanel5.setName("jPanel5"); 
    jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

    jButton3.setFont(jButton3.getFont());
    jButton3.setText(bundle.getString("WSNApplicationDemo4B.jButton3.text")); 
    jButton3.setName("jButton3"); 
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton3ActionPerformed(evt);
      }
    });
    jPanel5.add(jButton3);

    jLabel1.setFont(jLabel1.getFont());
    jLabel1.setText(bundle.getString("WSNApplicationDemo4B.jLabel1.text")); 
    jLabel1.setName("jLabel1"); 
    jPanel5.add(jLabel1);

    jPanel1.add(jPanel5);

    getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

    jPanel2.setName("jPanel2"); 
    jPanel2.setLayout(new java.awt.BorderLayout());

    jScrollPane1.setName("jScrollPane1"); 

    jTextPane1.setName("jTextPane1"); 
    jScrollPane1.setViewportView(jTextPane1);

    jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

    jScrollPane2.setName("jScrollPane2"); 

    jList1.setModel(listModel1);
    jList1.setName("jList1"); 
    jList1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jList1MouseClicked(evt);
      }
    });
    jList1.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        jList1KeyReleased(evt);
      }
    });
    jScrollPane2.setViewportView(jList1);

    jPanel2.add(jScrollPane2, java.awt.BorderLayout.WEST);

    getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

    pack();
  }

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
  a4.a4c.setSelectedId(getSelectedId());
  if(!a4.a4c.isVisible()) {a4.a4c.setVisible(true); a4.a4c.renewFileList();}
  a4.a4c.toFront();
}

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
  try{
    styleDoc.remove(0, styleDoc.getLength());
    if(jList1.getSelectedValue()!=null){
      String item=(String)jList1.getSelectedValue();
      String dataSrc=wsn.getDataSrcId(wsn.w.getGNS(1), item.substring(item.indexOf(":")+1));
      itemRecord.put(dataSrc, "");
    }
  }catch(BadLocationException e){e.printStackTrace();}
}

private void jList1KeyReleased(java.awt.event.KeyEvent evt) {
if(evt.getKeyCode()==38 || evt.getKeyCode()==40 )  changeItem();
}

private void jList1MouseClicked(java.awt.event.MouseEvent evt) {
 changeItem();
}

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		String cmd=jTextField1.getText();
		if(cmd.trim().length()<1) {JOptionPane.showMessageDialog(this,"No command to be sent."); return;}
                cmd=wsn.w.e642(cmd);
                if(jList1.getSelectedValue()!=null){
                  String item=(String) jList1.getSelectedValue();
                  String no=item.substring(0,4);
                  String da[]=wsn.w.csvLineToArray((String)a4.itemData.get(no));
                  if(da[6].length()<1)  {JOptionPane.showMessageDialog(this,"Yet not connected."); return;}
                  String id2="",id3="";
                  id2=da[2];
                  if(da[2].indexOf("-")!=-1) {
                    id2=da[2].substring(0,da[2].indexOf("-"));
                    id3=da[2].substring(da[2].indexOf("-")+1);
                  }
                  if(id3.length()<1) id3="0";
   		  cmd="performcommand wsn.WSN cmd "+id2+" "+id3+" false false false 0 "+cmd; 
                  wsn.w.sendToOne(cmd,da[6]);
                } else  {JOptionPane.showMessageDialog(this,"No target selected."); return;}
}
public void changeItem(){
  if(jList1.getSelectedValue()!=null){
      String item=(String)jList1.getSelectedValue();
      String dataSrc=wsn.getDataSrcId(wsn.w.getGNS(1), item.substring(item.indexOf(":")+1));
      String record="";
      Object o=itemRecord.get(dataSrc);
      if(o!=null) record=(String)o;
      jTextPane1.setText(record);
      String no=item.substring(0,4);
      String da[]=wsn.w.csvLineToArray((String)a4.itemData.get(no));
      boolean online=wsn.w.checkOneVar(da[4], 0);
          javax.swing.ImageIcon omg;
           if(online) omg= WSNApplicationDemo4.omgOn;
             else omg=WSNApplicationDemo4.omgOff;

     jLabel4.setIcon(omg);
      jLabel3.setText("No: "+item.substring(0,4)+"        "+item.substring(5)+",      status: "+(online? "online":"offline")+",       Location: "+da[3]);
    } else {
  try{
    jLabel4.setIcon(WSNApplicationDemo4.omgOff);
    styleDoc.remove(0, styleDoc.getLength());
    jLabel3.setText("");
  }catch(BadLocationException e){e.printStackTrace();}
  }
} 
public String getSelectedId(){
  String rtn=null;
  if(jList1.getSelectedValue()!=null){
    String item=(String)jList1.getSelectedValue();
    rtn=item.substring(0,item.indexOf(":"));
  }
  return rtn;
}
public void setSelectedId(String id){
  if(id!=null && a4.itemData.get(id)!=null){
    String data[]=wsn.w.csvLineToArray((String)a4.itemData.get(id));
    String item=data[0]+":"+data[1]+":"+data[2];
    jList1.setSelectedValue(item, true);
  } else jList1.setSelectedIndex(0);
    changeItem();
}
public void textPaneAppend(String temp2){
      textPaneAppend(jTextPane1,temp2);
  }
  public void textPaneAppend(JTextPane tp,String temp2){
       textPaneAppend(tp,temp2,null,0);
  }

  public void textPaneAppend(JTextPane tp,String temp2,Color col,int fontSize){
         if(jTextPane1.getText().length()>wsn.maxMainLogLength) {

             try{

               styleDoc.remove(0, styleDoc.getLength());
               begin=true;
             } catch(BadLocationException e){
                e.printStackTrace();
              }
         }

            try   {   
                SimpleAttributeSet   attrSet   =   new   SimpleAttributeSet();
                if(col!=null) StyleConstants.setForeground(attrSet,   col);   
                if(fontSize>0) StyleConstants.setFontSize(attrSet,   fontSize);  
                styleDoc.insertString(styleDoc.getLength(), temp2,  attrSet);
                begin=false;
            }   catch   (BadLocationException   e)   {   
               System.out.println("BadLocationException:   "   +   e);   
                }   

  }

public void setData(long time,String dataSrc,String data){
    String ip="",conn="";
    data=wsn.formatter3.format(new Date())+" "+wsn.getStringData(data, 0, -1, -1);
    if(itemRecord.get(dataSrc)!=null){
      String d=((String)itemRecord.get(dataSrc))+data+"\r\n";
      if(d.length()>wsn.maxMainLogLength) d=data+"\r\n";
      itemRecord.put(dataSrc,d);
    } else {
      itemRecord.put(dataSrc,data+"\r\n");
    }
    if(jList1.getSelectedValue()!=null){
      String item=(String)jList1.getSelectedValue();
      if(item.indexOf(dataSrc)!=-1){
        textPaneAppend(data+"\r\n");
      }
    }
}

  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton3;
  public javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JList jList1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPanel5;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTextField jTextField1;
  private javax.swing.JTextPane jTextPane1;

}